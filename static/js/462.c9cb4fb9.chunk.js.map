{"version":3,"file":"static/js/462.c9cb4fb9.chunk.js","mappings":"yMACA,EAA0B,2BAA1B,EAA4D,wBAA5D,EAA4F,yBAA5F,EAA8H,0B,iBCwC9H,EApCkB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAW1B,OACE,gBAAKC,UAAWC,EAAhB,UACE,kBAAMD,UAAWC,EAAUC,SAZV,SAAAC,GAEnB,GADAA,EAAMC,iBACe,KAAjBN,EAAMO,OACR,OAAOC,EAAAA,EAAAA,IAAM,0BAEfP,EAASD,EAGV,EAIG,WACE,mBAAQE,UAAWC,EAAYM,KAAK,SAAS,aAAW,SAAxD,UACE,SAAC,MAAD,CAAUC,KAAM,QAGlB,kBACER,UAAWC,EACXF,SAAU,SAAAU,GAAC,OAAIV,EAASU,EAAEC,OAAOZ,MAAtB,EACXA,MAAOA,EACPS,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,qBAKrB,E,mCClCD,EAAuB,qBAAvB,EAAmD,qBCkEnD,EA7De,WAAO,IAAD,EACnB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAK,UAAGT,EAAaU,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACJF,GACFG,EAAAA,EAAAA,IAAkBH,GACfI,MAAK,SAAAV,GACJC,EAAUD,GACVG,EAAgC,IAAlBH,EAAOW,OACtB,IACAC,OAAM,WACLT,GAAc,EACf,KAEHF,EAAU,IACVE,GAAc,GAEjB,GAAE,CAACG,EAAOT,IAEX,IAKMgB,EAAiB,SAAAC,GACrB,GAAIA,GAASA,EAAMC,aAAc,CAC/B,IAAMC,EAAc,IAAIC,KAAKH,EAAMC,cACnC,MAAM,IAAN,OAAWC,EAAYE,cAAvB,IACD,CACD,MAAO,EACR,EAED,OACE,iCACE,SAAC,EAAD,CAAWtC,MAAO0B,EAAOzB,SAfH,SAAAyB,GAExBR,EAD6B,KAAVQ,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,IAaIJ,GACC,wBAAI,kCAEJ,wBACGiB,MAAMC,QAAQpB,IAAWA,EAAOW,OAAO,GAAKX,EAAOqB,KAAI,SAAAP,GAAK,OAC3D,eAAmBhC,UAAWC,EAA9B,UACE,UAAC,KAAD,CACEuC,GAAE,kBAAaR,EAAMS,IACrBC,MAAO,CAAEC,KAAMrB,GACftB,UAAWC,EAHb,UAKG+B,EAAMY,MAAM,IAAEb,EAAeC,OANzBA,EAAMS,GAD4C,QAetE,C","sources":["webpack://goit-react-hw-05-movies/./src/components/SearchBox/SearchBox.module.css?45fa","components/SearchBox/SearchBox.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchBox_wrapper__bbbFW\",\"form\":\"SearchBox_form__GByKm\",\"input\":\"SearchBox_input__+nuoc\",\"button\":\"SearchBox_button__lPD4d\"};","import PropTypes from 'prop-types';\nimport { ImSearch } from 'react-icons/im';\nimport css from './SearchBox.module.css';\nimport { toast } from 'react-hot-toast';\n\nconst SearchBox = ({ value, onChange }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (value.trim() === '') {\n      return toast('Please enter film name');\n    }\n    onChange(value);\n    // -—è–∫—â–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –æ—á–∏—Å—Ç–∏—Ç–∏ —Ñ–æ—Ä–º—É:\n    // setFilmName('');\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <button className={css.button} type=\"submit\" aria-label=\"Search\">\n          <ImSearch size={20} />\n        </button>\n\n        <input\n          className={css.input}\n          onChange={e => onChange(e.target.value)}\n          value={value}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n        />\n      </form>\n    </div>\n  );\n};\n\nSearchBox.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBox;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Movies_item__Ba4aJ\",\"link\":\"Movies_link__MzAfU\"};","import SearchBox from 'components/SearchBox/SearchBox';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { searchMoviesFetch } from 'services/api';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [isNotFound, setIsNotFound] = useState(false);\n  const location = useLocation();\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query) {\n      searchMoviesFetch(query)\n        .then(movies => {\n          setMovies(movies);\n          setIsNotFound(movies.length === 0);\n        })\n        .catch(() => {\n          setIsNotFound(true);\n        });\n    } else {\n      setMovies([]);\n      setIsNotFound(false);\n    }\n  }, [query, searchParams]);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  const getReleaseYear = movie => {\n    if (movie && movie.release_date) {\n      const releaseDate = new Date(movie.release_date);\n      return `(${releaseDate.getFullYear()})`;\n    }\n    return '';\n  };\n\n  return (\n    <>\n      <SearchBox value={query} onChange={updateQueryString} />\n      {isNotFound ? (\n        <h2>No movies found üò¢</h2>\n      ) : (\n        <ul>\n          {Array.isArray(movies) && movies.length>0 && movies.map(movie => (\n            <li key={movie.id} className={css.item}>\n              <Link\n                to={`/movies/${movie.id}`}\n                state={{ from: location }}\n                className={css.link}\n              >\n                {movie.title} {getReleaseYear(movie)}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["value","onChange","className","css","onSubmit","event","preventDefault","trim","toast","type","size","e","target","autoComplete","autoFocus","placeholder","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","isNotFound","setIsNotFound","location","useLocation","query","get","useEffect","searchMoviesFetch","then","length","catch","getReleaseYear","movie","release_date","releaseDate","Date","getFullYear","Array","isArray","map","to","id","state","from","title"],"sourceRoot":""}
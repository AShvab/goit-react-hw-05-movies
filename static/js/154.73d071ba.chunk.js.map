{"version":3,"file":"static/js/154.73d071ba.chunk.js","mappings":"yMACA,EAA0B,2BAA1B,EAA4D,wBAA5D,EAA4F,yBAA5F,EAA8H,0B,iBCwC9H,EApCkB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAW1B,OACE,gBAAKC,UAAWC,EAAhB,UACE,kBAAMD,UAAWC,EAAUC,SAZV,SAAAC,GAEnB,GADAA,EAAMC,iBACe,KAAjBN,EAAMO,OACR,OAAOC,EAAAA,EAAAA,IAAM,0BAEfP,EAASD,EAGV,EAIG,WACE,mBAAQE,UAAWC,EAAYM,KAAK,SAAS,aAAW,SAAxD,UACE,SAAC,MAAD,CAAUC,KAAM,QAGlB,kBACER,UAAWC,EACXF,SAAU,SAAAU,GAAC,OAAIV,EAASU,EAAEC,OAAOZ,MAAtB,EACXA,MAAOA,EACPS,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,qBAKrB,E,mCCUD,EAxCe,WAAO,IAAD,EACnB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAK,UAAGP,EAAaQ,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACJF,IACFG,EAAAA,EAAAA,IAAkBH,GAAOI,KAAKP,EAEjC,GAAE,CAACG,EAAOP,IAEX,IAKMY,EAAiB,SAAAC,GACrB,GAAIA,GAASA,EAAMC,aAAc,CAC/B,IAAMC,EAAc,IAAIC,KAAKH,EAAMC,cACnC,MAAM,IAAN,OAAWC,EAAYE,cAAvB,IACD,CACD,MAAO,EACR,EAED,OACE,iCACE,SAAC,EAAD,CAAWlC,MAAOwB,EAAOvB,SAfH,SAAAuB,GAExBN,EAD6B,KAAVM,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,IAaIJ,EAAOe,KAAI,SAAAL,GAAK,OACf,yBACE,UAAC,KAAD,CAAMM,GAAE,kBAAaN,EAAMO,IAAMC,MAAO,CAAEC,KAAMjB,GAAhD,UACGQ,EAAMU,MAAM,IAAEX,EAAeC,OAFzBA,EAAMO,GADA,MAStB,C","sources":["webpack://goit-react-hw-05-movies/./src/components/SearchBox/SearchBox.module.css?45fa","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SearchBox_wrapper__bbbFW\",\"form\":\"SearchBox_form__GByKm\",\"input\":\"SearchBox_input__+nuoc\",\"button\":\"SearchBox_button__lPD4d\"};","import PropTypes from 'prop-types';\nimport { ImSearch } from 'react-icons/im';\nimport css from './SearchBox.module.css';\nimport { toast } from 'react-hot-toast';\n\nconst SearchBox = ({ value, onChange }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (value.trim() === '') {\n      return toast('Please enter film name');\n    }\n    onChange(value);\n    // -якщо необхідно очистити форму:\n    // setFilmName('');\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <button className={css.button} type=\"submit\" aria-label=\"Search\">\n          <ImSearch size={20} />\n        </button>\n\n        <input\n          className={css.input}\n          onChange={e => onChange(e.target.value)}\n          value={value}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n        />\n      </form>\n    </div>\n  );\n};\n\nSearchBox.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBox;\n","import SearchBox from 'components/SearchBox/SearchBox';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { searchMoviesFetch } from 'services/api';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query) {\n      searchMoviesFetch(query).then(setMovies);\n    }\n  }, [query, searchParams]);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  const getReleaseYear = movie => {\n    if (movie && movie.release_date) {\n      const releaseDate = new Date(movie.release_date);\n      return `(${releaseDate.getFullYear()})`;\n    }\n    return '';\n  };\n\n  return (\n    <>\n      <SearchBox value={query} onChange={updateQueryString} />\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title} {getReleaseYear(movie)}\n          </Link>\n        </li>\n      ))}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["value","onChange","className","css","onSubmit","event","preventDefault","trim","toast","type","size","e","target","autoComplete","autoFocus","placeholder","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","location","useLocation","query","get","useEffect","searchMoviesFetch","then","getReleaseYear","movie","release_date","releaseDate","Date","getFullYear","map","to","id","state","from","title"],"sourceRoot":""}